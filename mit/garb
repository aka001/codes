/**Author: Akash Agrawall
Institution: IIIT Hyderabad **/
#include<cstdio>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<climits>
#include<algorithm>
#include<vector>
#include<set>
#include<map>
#include<bitset>
#include<stack>
#include<queue>
using namespace std;

#define FOR(i,a,b) 	for(int i= (int )a ; i < (int )b ; ++i)
#define rep(i,n) 	FOR(i,0,n)
#define INF		INT_MAX
#define ALL(x) 		x.begin(),x.end()
#define LET(x,a)	__typeof(a) x(a)
#define IFOR(i,a,b) 	for(LET(i,a);i!=(b);++i)
#define EACH(it,v) 	IFOR(it,v.begin(),v.end())
#define pb 		push_back
#define sz(x) 		int(x.size())
#define mp 		make_pair
#define fill(x,v)	memset(x,v,sizeof(x))
#define max(a,b)	((a)>(b)?(a):(b))
#define min(a,b)	((a)<(b)?(a):(b))
#define	si(n)		scanf("%d",&n)
#define pi(n)		printf("%d ",n)
#define pil(n)		printf("%d\n",n)
#define sl(n)		scanf("%lld",&n)
#define sd(n)		scanf("%lf",&n)
#define ss(n)		scanf("%s",n)
#define scan(v,n)	vector<int> v;rep(i,n){ int j;si(j);v.pb(j);}
#define mod (int)(1e9 + 7)
typedef pair<int,int> PI;
typedef vector<int> VI;
typedef vector<VI> VVI;
typedef long long LL;
string S;
int l,k;
string ans;
int ar[200],br[200];
int pos(int n)
{
	int i;
	for(i=0;i<k;i++)
		if(ar[i]==n)
			return i;
}
int compare(const void *p, const void *q)
{
	return *(int*)p-*(int*)q;
}
int main()
{
	int aka=0,i,p,max,x,ans[7],cnt,k1,k2,pmax,flag;
	while(1)
	{
		si(k);
		if(k==0)
			break;
		if(aka!=0)
		{
			printf("\n");
		}
		aka=1;
		flag=0;
		rep(i,k)
		{
			si(ar[i]);
			br[i]=ar[i];
		}
		qsort(ar,k,sizeof(ar[0]),compare);
		cnt=0;
		/*rep(i,k)
		  printf("%d ",ar[i]);
		  printf("\n");*/
		rep(j,k-5)
		{
			k2=j;
			k1=k2;
			x=k2+6;
			for(;k2<x;k2++)
			{
				ans[k2-k1]=ar[k2];
				printf("%d",ans[k2-k1]);
				if(k2==x-1)
					printf("\n");
				else
					printf(" ");
			}
			max=ar[k-1];
			pmax=k-1;
			p=5;
			while(1)
			{
				flag=0;
				if(ans[p]==max)
				{
					while(p>=0 && ans[p--]==ar[pmax--]);
					if(p==-1)
						flag=2;
					else
					{
						max=ar[++pmax];
						ans[++p]=ar[pos(ans[p])+1];

					}
				}
				else
				{
					ans[p]=ar[pos(ans[p])+1];
				}
				if(flag!=2)
				{
					rep(i,6)
					{
						printf("%d",ans[i]);
						if(i==5)
							printf("\n");
						else
							printf(" ");
					}
					if(flag==1)
						break;
				}
				else
					break;
				cnt++;
			}
		}
	}
	return 0;
}









