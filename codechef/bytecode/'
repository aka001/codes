/*******************
  Akash Agrawall
  IIIT HYDERABAD
 ***********************/


#include<cstdio>
#include<iostream>
#include<cstdlib>
#include<cmath>
#include<cstring>
#include<climits>
#include<algorithm>
#include<vector>
#include<set>
#include<map>
#include<bitset>
#include<stack>
#include<queue>
#include<stdio.h>
#include<string.h>
#include<math.h>
#include<functional>
#include<numeric>
using namespace std;
#define FOR(i,a,b) for(i= a ; i < b ; ++i)
#define rep(i,n) FOR(i,0,n)
#define INF INT_MAX
#define ALL(x) x.begin(),x.end()
#define LET(x,a) __typeof(a) x(a)
#define IFOR(i,a,b) for(LET(i,a);i!=(b);++i)
#define EACH(it,v) IFOR(it,v.begin(),v.end())
#define pb push_back
#define sz(x) int(x.size())
#define mp make_pair
#define fill(x,v) memset(x,v,sizeof(x))
#define max(a,b) ((a)>(b)?(a):(b))
#define min(a,b) ((a)<(b)?(a):(b))
#define si(n) scanf("%d",&n)
#define pi(n) printf("%d ",n)
#define pd(n) printf("%lf ",n);
#define pdl(n) printf("%lf\n",n);
#define pin(n) printf("%d\n",n)
#define pln(n) printf("%lld\n",n)
#define pl(n) printf("%lld ",n)
#define sl(n) scanf("%lld",&n)
#define sd(n) scanf("%lf",&n)
#define ss(n) scanf("%s",n)
#define scan(v,n) vector<int> v;rep(i,n){ int j;si(j);v.pb(j);}
#define mod (int)(1e9 + 7)
#define ll long long int
ll modpow(ll a,ll n,ll temp){ll res=1,y=a;while(n>0){if(n&1)res=(res*y)%temp;y=(y*y)%temp;n/=2;}return res%temp;} 
string next(string s1){
	string s=s1;
	int i;
	for(i=s1.length()-1;i>=0;i--)
	{
		if(s1[i]!='z'){
			s[i]=s[i]+1;
			break;
		}
		else{
			s[i]='a';
		}
	}
	return s;
}
char ch[1000006];
ll hash[10000006];
int main()
{
	ll t,sz,calc,i,j,length,cnt,flg,val=-1,n,flag,v;
	vector<ll> arrit;
	cnt=0;
	string st="a";
	sl(t);
	while(t--)
	{
		ss(ch);
		sz=strlen(ch);
		rep(i,6)
		{
			arrit.clear();
			n=i+1;
			calc=0;
			rep(j,i+1)
			{
				calc=26*calc+(ch[j]-'a');
			}
			arrit.pb(calc);
			cnt=0;
			for(j=i+1;j<sz;j++)
			{
				calc=26*(calc-modpow(26,i,mod)*(ch[cnt]-'a'))+(ch[j]-'a');
				cnt++;
				arrit.pb(calc);
			}
			sort(arrit.begin(),arrit.end());
			arrit.erase( unique( arrit.begin(), arrit.end() ), arrit.end() );
			sort(arrit.begin(),arrit.end());
			val=-1;
			sz=arrit.size();
			//rep(j,sz)
			//	printf("i=%d %d\n",i,arrit[j]);
			flag=0;
			rep(j,sz)
			{
				if(arrit[j]!=val+1)
				{
					flag=1;
					break;
				}
				val=arrit[j];
			}
			if(flag==0 && arrit[sz-1]!=modpow(26,i+1,mod)-1)
			{
				flag=1;
				val=arrit[sz-1];
			}
			if(flag==1)
			{
				val++;
				rep(j,i+1)
				{
					calc=modpow(26,i-j,mod);
					v=val/calc;
					cout<<char('a'+v);
					val%=calc;
				}
				cout<<endl;
				break;
			}
		}
	}
	return 0;
}











